services:

#Se necesita primero la base de datos
  mysql_db:
    image: mysql:8.0
    container_name: mysql_db
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_PASSWORD: mysql
      MYSQL_DATABASE: tododb
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - microservices
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Config Server (config-server)
  config-server:
    build: ./config-server
    container_name: config-server
    ports:
      - "8888:8888"
    volumes:
      - ./config-repo:/config-repo
    networks:
      - microservices
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 5

  # OAuth2 Server (oauth2-server)
  oauth2-server:
    build: ./oauth2-server
    container_name: oauth2-server
    ports:
      - "9000:9000"
    depends_on:
      mysql_db:
        condition: service_healthy # Espera que la DB este lista para conectarse
      config-server:
        condition: service_healthy # Espera que el Config Server esté listo para cargar su configuracion
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_db:3306/tododb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=mysql
    networks:
      - microservices

  # SERVIDOR EUREKA (eureka-server) 
  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_healthy
    networks:
      - microservices
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888

  # API GATEWAY (api-gateway) 
  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_started # No es tan crítico que Eureka esté healthy, solo corriendo
    networks:
      - microservices
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka

  # USER SERVICE
  user-service:
    build: ./user-service
    container_name: user-service
    depends_on:
      mysql_db:
        condition: service_healthy
      eureka-server:
        condition: service_started
      config-server:
        condition: service_healthy
    networks:
      - microservices
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_db:3306/tododb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=mysql

  # TO-DO SERVICE (to-do-service)
  to-do-service:
    build: ./to-do-service
    container_name: to-do-service
    depends_on:
      mysql_db:
        condition: service_healthy
      eureka-server:
        condition: service_started
      config-server:
        condition: service_healthy
    networks:
      - microservices
    environment:
      - SPRING_CONFIG_IMPORT=configserver:http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_db:3306/tododb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=mysql

volumes:
  db_data:

networks:
  microservices:
    driver: bridge